name: Full pipeline
on: [workflow_dispatch, push]
jobs:
  dataset-fetch:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3
      - name: prep dir
        run: mkdir data && mkdir data/data-storage
      - name: fetch
        run: wget https://gist.githubusercontent.com/zeionara/de67f6c5ced7a7b04eac8d6556265e8e/raw/8aac306c985bd9e9e565fd97f4c6ea51c45a7d2c/ratings.csv && mv ratings.csv data/data-storage/ratings.csv

      - name: save to storage
        uses: actions/upload-artifact@v3
        with:
          name: data-storage
          path: data/data-storage/


  extract:
    runs-on: ubuntu-latest
    needs: dataset-fetch
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3
      - name: download
        uses: actions/download-artifact@v3
        with:
          name: data-storage
          path: data/data-storage/
      - name: prep dir
        run: mkdir data/models && mkdir data/preprocessing && mkdir data/features && ls data && ls data/data-storage
      - name: install requirements
        run: pip install -r deps/preprocessing.txt
      - name: run script
        env:
          DATA: "data/data-storage/ratings.csv"
          TRAIN_DATA: "data/features/train.csv"
          TEST_DATA: "data/features/test.csv"
          LABELERS: "data/preprocessing/"
        run: python src/label_data.py
      - name: upload features
        uses: actions/upload-artifact@v3
        with:
          name: features
          path: data/features/
      - name: upload model
        uses: actions/upload-artifact@v3
        with:
          name: models
          path: data/models/
      - name: upload labeler
        uses: actions/upload-artifact@v3
        with:
          name: labeler
          path: data/preprocessing

  train:
    runs-on: ubuntu-latest
    needs: extract
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3
      - name: download features
        uses: actions/download-artifact@v3
        with:
          name: features
          path: data/features/
      - name: prep dir
        run: mkdir data/models
      - name: install requirements
        run: pip install -r deps/preprocessing.txt

      - name: train Random Forest
        env:
          TRAIN_DATA: "data/features/train.csv"
          MODEL_ARTIFACT: "data/models/forest.pkl"
          MODEL: "RandomForest"
        run: python src/train.py

      - name: train MLP
        env:
          TRAIN_DATA: "data/features/train.csv"
          MODEL_ARTIFACT: "data/models/MLP.pkl"
          MODEL: "MLP"
        run: python src/train.py

      - name: train logistic regression
        env:
          TRAIN_DATA: "data/features/train.csv"
          MODEL_ARTIFACT: "data/models/logistic.pkl"
          MODEL: "Logistic"
        run: python src/train.py

      - name: upload model
        uses: actions/upload-artifact@v3
        with:
          name: models
          path: data/models/

  eval:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3
      - name: download models
        uses: actions/download-artifact@v3
        with:
          name: models
          path: data/models/
      - name: download features
        uses: actions/download-artifact@v3
        with:
          name: features
          path: data/features/
      - name: install requirements
        run: pip install -r deps/preprocessing.txt
      - name: run eval
        env:
          TEST_DATA: "data/features/train.csv"
          MODELS: "data/models"
          OPTIMAL_MODEL: "data/models/best_model.pkl"
        run: python src/eval.py
      - name: save to storage
        uses: actions/upload-artifact@v3
        with:
          name: models
          path: data/models

  deploy:
    runs-on: self-hosted
    needs: eval
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3
      - name: download models
        uses: actions/download-artifact@v3
        with:
          name: models
          path: data/models/
      - name: download labeler
        uses: actions/download-artifact@v3
        with:
          name: labeler
          path: data/preprocessing
      - name: check download
        run: ls data/models && echo "" && ls data
      - name: install requirements
        run: pip install -r deps/prod.txt
      - name: start app
        env:
          LABELER: "../data/preprocessing/label_encoder.pkl"
          MINMAX: "../data/preprocessing/minmaxer.pkl"
          MODEL: "../data/models/best_model.pkl"
        run: cd api && gunicorn app:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000

